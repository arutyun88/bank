plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "com.google.protobuf" version "0.8.13"
	id "com.palantir.docker" version "0.25.0"
}

group = 'com.neoflex'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

docker {
	name "grpc_client"
	dockerfile file('Dockerfile')
	copySpec.from(jar).rename(".*", "grpc_client.jar")
	buildArgs(['JAR_FILE': "grpc_client.jar"])
}

repositories {
	maven { // The google mirror is less flaky than mavenCentral()
		url "https://maven-central.storage-download.googleapis.com/maven2/" }
	mavenCentral()
	mavenLocal()
}

def grpcVersion = '1.32.1'
def protobufVersion = '3.12.0'

dependencies {
	compile group: 'com.google.protobuf', name: 'protobuf-java', version: "${protobufVersion}"
	compile group: 'io.grpc', name: 'grpc-all', version: "${grpcVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobufVersion}"
	}

	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}

	generateProtoTasks{
		all()*.plugins{
			grpc{}
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/grpc'
			srcDirs 'build/generated/source/proto/main/java'
		}
	}
}

test {
	useJUnitPlatform()
}
